apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-staging
spec:
  replicas: 0
  selector:
    matchLabels:
      app: server-staging
  template:
    metadata:
      name: server-staging
      labels:
        app: server-staging
    spec:
      containers:
        - name: server-staging
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          ports:
              - containerPort: 80
                name: http
                protocol: TCP
          workingDir: /opt/typedb-web
          command: [
            ./server,
            --env=staging,
            --address={{ .Values.address }},
            --sanity-url={{ .Values.sanity_url }},
          ]
          envFrom:
            - secretRef:
                name: server-secret
      imagePullSecrets:
        - name: docker-credentials
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: server-staging
spec:
  workloadRef:
    apiVersion: apps/v1
    kind: Deployment
    name: server-staging
  replicas: {{ .Values.replica_count.staging }}
  revisionHistoryLimit: 2
  strategy:
    blueGreen:
      activeService: server-staging
      previewService: server-staging-preview
      autoPromotionEnabled: true
---
apiVersion: v1
kind: Service
metadata:
  name: server-staging
spec:
  type: LoadBalancer
  selector:
    app: server-staging
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
---
apiVersion: v1
kind: Service
metadata:
  name: server-staging-preview
spec:
  type: LoadBalancer
  selector:
    app: server-staging
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
