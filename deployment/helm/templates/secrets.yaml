apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: docker-credentials
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: cluster-secret-store
    kind: ClusterSecretStore
  target:
    template:
      type: kubernetes.io/dockerconfigjson
      engineVersion: v2
      data:
        .dockerconfigjson: "{{ `{{ .dockercredentials }}` }}"
    name: dockercredentials
    creationPolicy: Owner
  data:
  - secretKey: dockercredentials
    remoteRef:
      key: {{ .Values.infrastructure.gcp.secret_manager.docker_credentials.name }}
      version: {{ .Values.infrastructure.gcp.secret_manager.docker_credentials.version | quote }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: strapi-db-root-password
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: cluster-secret-store
    kind: ClusterSecretStore
  target:
    template:
      type: Opaque
      engineVersion: v2
      data:
        MYSQL_ROOT_PASSWORD: "{{ `{{ .strapidbrootpassword }}` }}"
    name: strapidbrootpassword
    creationPolicy: Owner
  data:
    - secretKey: strapidbrootpassword
      remoteRef:
        key: {{ .Values.infrastructure.gcp.secret_manager.strapi_db_root_password.name }}
        version: {{ .Values.infrastructure.gcp.secret_manager.strapi_db_root_password.version | quote }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: strapi-db-user-password
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: cluster-secret-store
    kind: ClusterSecretStore
  target:
    template:
      type: Opaque
      engineVersion: v2
      data:
        MYSQL_PASSWORD: "{{ `{{ .strapidbuserpassword }}` }}"
    name: strapidbuserpassword
    creationPolicy: Owner
  data:
    - secretKey: strapidbuserpassword
      remoteRef:
        key: {{ .Values.infrastructure.gcp.secret_manager.strapi_db_user_password.name }}
        version: {{ .Values.infrastructure.gcp.secret_manager.strapi_db_user_password.version | quote }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: strapi-application-db-password
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: cluster-secret-store
    kind: ClusterSecretStore
  target:
    template:
      type: Opaque
      engineVersion: v2
      data:
        DATABASE_PASSWORD: "{{ `{{ .strapiapplicationdbpassword }}` }}"
    name: strapiapplicationdbpassword
    creationPolicy: Owner
  data:
    - secretKey: strapiapplicationdbpassword
      remoteRef:
        key: {{ .Values.infrastructure.gcp.secret_manager.strapi_db_user_password.name }}
        version: {{ .Values.infrastructure.gcp.secret_manager.strapi_db_user_password.version | quote }}
