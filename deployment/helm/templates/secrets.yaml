apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: docker-credentials
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: cluster-secret-store
    kind: ClusterSecretStore
  target:
    template:
      type: kubernetes.io/dockerconfigjson
      engineVersion: v2
      data:
        .dockerconfigjson: "{{ `{{ .docker-credentials }}` }}"
    name: docker-credentials
    creationPolicy: Owner
  data:
  - secretKey: docker-credentials
    remoteRef:
      key: {{ .Values.infrastructure.gcp.secret_manager.docker_credentials.name }}
      version: {{ .Values.infrastructure.gcp.secret_manager.docker_credentials.version | quote }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: strapi-db-root-password
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: cluster-secret-store
    kind: ClusterSecretStore
  target:
    template:
      type: Opaque
      engineVersion: v2
      data:
        MYSQL_ROOT_PASSWORD: "{{ `{{ .strapi-db-root-password }}` }}"
    name: strapi-db-root-password
    creationPolicy: Owner
  data:
    - secretKey: strapi-db-root-password
      remoteRef:
        key: {{ .Values.infrastructure.gcp.secret_manager.strapi_db_root_password.name }}
        version: {{ .Values.infrastructure.gcp.secret_manager.strapi_db_root_password.version | quote }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: strapi-db-user-password
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: cluster-secret-store
    kind: ClusterSecretStore
  target:
    template:
      type: Opaque
      engineVersion: v2
      data:
        MYSQL_PASSWORD: "{{ `{{ .strapi-db-user-password }}` }}"
    name: strapi-db-user-password
    creationPolicy: Owner
  data:
    - secretKey: strapi-db-user-password
      remoteRef:
        key: {{ .Values.infrastructure.gcp.secret_manager.strapi_db_user_password.name }}
        version: {{ .Values.infrastructure.gcp.secret_manager.strapi_db_user_password.version | quote }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: strapi-application-db-password
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: cluster-secret-store
    kind: ClusterSecretStore
  target:
    template:
      type: Opaque
      engineVersion: v2
      data:
        DATABASE_PASSWORD: "{{ `{{ .strapi-application-db-password }}` }}"
    name: strapi-application-db-password
    creationPolicy: Owner
  data:
    - secretKey: strapi-db-user-password
      remoteRef:
        key: {{ .Values.infrastructure.gcp.secret_manager.strapi_db_user_password.name }}
        version: {{ .Values.infrastructure.gcp.secret_manager.strapi_db_user_password.version | quote }}
